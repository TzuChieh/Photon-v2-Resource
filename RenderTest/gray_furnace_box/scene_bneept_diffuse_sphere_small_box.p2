#version 1.1.0;

option(single-frame-render-session) @session = 
    [vector2 frame-size "64 64"]
    [string visualizer @visualizer]
    [string observer @observer]
    [string sample-source @sampler];
observer(single-lens) @observer = [real fov-degrees 80] [vector3 pos "0 0 16"] [vector3 dir "0 0 -1"] [vector3 up-axis "0 1 0"];
sample-source(stratified) @sampler = [integer samples 1024];
visualizer(path-tracing) @visualizer = [enum sample-filter gaussian] [enum estimator bneept];

geometry(rectangle) @boxWall = [real width 40] [real height 40];
material(ideal-substance) @pureAbsorption = [enum substance absorber];
image(constant) @gray = [real-array values "0.5"][enum color-space LSRGB];
image(constant) @white = [real-array values "1.0"][enum color-space LSRGB];

// Box wall: left
actor(model-light) @leftWall = 
    [geometry geometry @boxWall]
    [material material @pureAbsorption]
    [image emitted-energy @gray];
translate(@leftWall) = [vector3 amount "-18 0 0"];
rotate(@leftWall)    = [vector3 axis "0 1 0"] [real degrees 90];

// Box wall: right
actor(model-light) @rightWall = 
    [geometry geometry @boxWall]
    [material material @pureAbsorption]
    [image emitted-energy @gray];
translate(@rightWall) = [vector3 amount "18 0 0"];
rotate(@rightWall)    = [vector3 axis "0 1 0"] [real degrees -90];

// Box wall: top
actor(model-light) @topWall = 
    [geometry geometry @boxWall]
    [material material @pureAbsorption]
    [image emitted-energy @gray];
translate(@topWall) = [vector3 amount "0 18 0"];
rotate(@topWall)    = [vector3 axis "1 0 0"] [real degrees 90];

// Box wall: bottom
actor(model-light) @bottomWall = 
    [geometry geometry @boxWall]
    [material material @pureAbsorption]
    [image emitted-energy @gray];
translate(@bottomWall) = [vector3 amount "0 -18 0"];
rotate(@bottomWall)    = [vector3 axis "1 0 0"] [real degrees -90];

// Box wall: back
actor(model-light) @backWall = 
    [geometry geometry @boxWall]
    [material material @pureAbsorption]
    [image emitted-energy @gray];
translate(@backWall) = [vector3 amount "0 0 -18"];

// Box wall: front
actor(model-light) @frontWall = 
    [geometry geometry @boxWall]
    [material material @pureAbsorption]
    [image emitted-energy @gray];
translate(@frontWall) = [vector3 amount "0 0 18"];
rotate(@frontWall)    = [vector3 axis "0 1 0"] [real degrees 180];

// Target object (@ origin)
material(matte-opaque) @targetMaterial = [image albedo @white];
geometry(sphere) @targetGeometry = [real radius 9];
actor(model) @target = [geometry geometry @targetGeometry] [material material @targetMaterial];
